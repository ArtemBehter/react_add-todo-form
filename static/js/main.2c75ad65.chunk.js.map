{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","api/todos.ts","App.tsx","index.tsx"],"names":["UserInfo","user","className","href","email","name","TodoInfo","todo","id","cn","completed","title","TodoList","todos","map","username","userId","getUser","usersFromServer","find","usr","App","initTodos","todosFromServer","useState","setTodos","setTodo","isFilled","setIsFilled","action","method","onSubmit","event","newTodo","preventDefault","currentTodos","Math","max","toDo","htmlFor","type","value","placeholder","onChange","target","trim","disabled","ReactDOM","render","document","getElementById"],"mappings":"4OAOaA,EAA8B,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAC5C,OACE,mBACEC,UAAU,WACVC,KAAI,iBAAYF,EAAKG,OAFvB,SAIGH,EAAKI,QCJCC,EAA4B,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAC1C,OACE,0BACE,UAASA,EAAKC,GACdN,UAAWO,IAAG,WAAY,CAAE,sBAAuBF,EAAKG,YAF1D,UAIE,oBAAIR,UAAU,kBAAd,SACGK,EAAKI,QAEPJ,EAAKN,MACJ,cAAC,EAAD,CACEA,KAAMM,EAAKN,WCZRW,EAA4B,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC1C,OACE,0BAASX,UAAU,WAAnB,UACGW,EAAMC,KAAI,SAAAP,GAAI,OACb,cAAC,EAAD,CAEEA,KAAMA,GADDA,EAAKC,OAHhB,QCVW,GACb,CACEA,GAAI,EACJH,KAAM,gBACNU,SAAU,OACVX,MAAO,qBAET,CACEI,GAAI,EACJH,KAAM,eACNU,SAAU,YACVX,MAAO,qBAET,CACEI,GAAI,EACJH,KAAM,mBACNU,SAAU,WACVX,MAAO,sBAET,CACEI,GAAI,EACJH,KAAM,mBACNU,SAAU,WACVX,MAAO,6BAET,CACEI,GAAI,EACJH,KAAM,mBACNU,SAAU,SACVX,MAAO,4BAET,CACEI,GAAI,EACJH,KAAM,uBACNU,SAAU,mBACVX,MAAO,2BAET,CACEI,GAAI,EACJH,KAAM,kBACNU,SAAU,eACVX,MAAO,0BAET,CACEI,GAAI,EACJH,KAAM,2BACNU,SAAU,gBACVX,MAAO,wBAET,CACEI,GAAI,EACJH,KAAM,kBACNU,SAAU,WACVX,MAAO,2BAET,CACEI,GAAI,GACJH,KAAM,qBACNU,SAAU,iBACVX,MAAO,2BC3DI,GACb,CACEI,GAAI,EACJG,MAAO,qBACPD,WAAW,EACXM,OAAQ,GAEV,CACER,GAAI,GACJG,MAAO,kBACPD,WAAW,EACXM,OAAQ,GAEV,CACER,GAAI,EACJG,MAAO,qCACPD,WAAW,EACXM,OAAQ,ICTZ,SAASC,EAAQT,GACf,OAAOU,EAAgBC,MAAK,SAAAC,GAAG,OAAKZ,IAAQY,EAAIZ,OAAO,KAGlD,IAAMa,EAAM,WACjB,IAAMC,EAAYC,EAAgBT,KAAI,SAAAP,GAAI,kCACrCA,GADqC,IAExCN,KAAMgB,EAAQV,EAAKS,aAGrB,EAA0BQ,mBAAiBF,GAA3C,mBAAOT,EAAP,KAAcY,EAAd,KACA,EAAwBD,mBACtB,CACEhB,GAAI,EACJG,MAAO,GACPD,WAAW,EACXT,KAAM,OALV,mBAAOM,EAAP,KAAamB,EAAb,KASA,EAAgCF,oBAAS,GAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KAqDA,OACE,sBAAK1B,UAAU,MAAf,UACE,+CAEA,uBACE2B,OAAO,aACPC,OAAO,OACPC,SApBe,SAACC,GAA4B,IAAD,EAtClCC,GAuCbD,EAAME,iBAED3B,EAAKI,OAAS,UAACJ,EAAKN,YAAN,OAAC,EAAWO,KAzClByB,EA+CP1B,EA9CNkB,GAAS,SAAAU,GAAY,4BAChBA,GADgB,4BAGdF,GAHc,IAIjBzB,GAAI4B,KAAKC,IAAL,MAAAD,KAAI,YAASb,EAAgBT,KAAI,SAAAwB,GAAI,OAAIA,EAAK9B,QAAQ,SAM9DkB,EACE,CACElB,GAAI,EACJG,MAAO,GACPD,WAAW,EACXT,KAAM,OAIV2B,GAAY,IAsBVA,GAAY,IAaZ,UAKE,qBAAK1B,UAAU,QAAf,SACE,wBAAOqC,QAAQ,QAAf,mBAEE,uBACEC,KAAK,OACLC,MAAOlC,EAAKI,MACZ,UAAQ,aACRN,KAAK,QACLqC,YAAY,gBACZC,SA9Cc,SAACX,GACzBN,EAAQ,2BACDnB,GADA,IACMI,MAAOqB,EAAMY,OAAOH,aA8CtBlC,EAAKI,MAAMkC,SAAWlB,GACnB,sBAAMzB,UAAU,QAAhB,uCAIV,qBAAKA,UAAU,QAAf,SACE,wBAAOqC,QAAQ,SAAf,kBAEE,yBACElC,KAAK,SACL,UAAQ,aACRsC,SArDe,SAACX,GAC1BN,EAAQ,2BAEDnB,GAFA,IAGHN,KAAMgB,GAASe,EAAMY,OAAOH,WAkDtBA,MAAQlC,EAAKN,KAAWM,EAAKN,KAAKO,GAAd,EAJtB,UAME,wBAAQiC,MAAM,IAAIK,UAAQ,EAA1B,2BACC5B,EAAgBJ,KAAI,SAAAM,GAAG,OACtB,wBACEqB,MAAOrB,EAAIZ,GADb,SAIGY,EAAIf,MAFAe,EAAIZ,WAOZD,EAAKN,OAAS0B,GACX,sBAAMzB,UAAU,QAAhB,uCAIV,wBACEsC,KAAK,SACL,UAAQ,eAFV,oBAOF,cAAC,EAAD,CACE3B,MAAOA,QCxIfkC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.2c75ad65.chunk.js","sourcesContent":["import React from 'react';\nimport { User } from '../../types';\n\ntype UsrInfo = {\n  user: User\n};\n\nexport const UserInfo: React.FC<UsrInfo> = ({ user }) => {\n  return (\n    <a\n      className=\"UserInfo\"\n      href={`mailto:${user.email}`}\n    >\n      {user.name}\n    </a>\n  );\n};\n","import React from 'react';\nimport cn from 'classnames';\nimport { UserInfo } from '../UserInfo';\nimport { ToDo } from '../../types';\n\ntype Props = {\n  todo: ToDo,\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  return (\n    <article\n      data-id={todo.id}\n      className={cn('TodoInfo', { 'TodoInfo--completed': todo.completed })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {todo.title}\n      </h2>\n      {todo.user && (\n        <UserInfo\n          user={todo.user}\n        />\n      )}\n    </article>\n  );\n};\n","import React from 'react';\nimport { TodoInfo } from '../TodoInfo';\nimport { ToDo } from '../../types';\n\ntype Props = {\n  todos: ToDo[],\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo\n          key={todo.id}\n          todo={todo}\n        />\n      ))}\n      ;\n    </section>\n  );\n};\n","export default [\r\n  {\r\n    id: 1,\r\n    name: 'Leanne Graham',\r\n    username: 'Bret',\r\n    email: 'Sincere@april.biz',\r\n  },\r\n  {\r\n    id: 2,\r\n    name: 'Ervin Howell',\r\n    username: 'Antonette',\r\n    email: 'Shanna@melissa.tv',\r\n  },\r\n  {\r\n    id: 3,\r\n    name: 'Clementine Bauch',\r\n    username: 'Samantha',\r\n    email: 'Nathan@yesenia.net',\r\n  },\r\n  {\r\n    id: 4,\r\n    name: 'Patricia Lebsack',\r\n    username: 'Karianne',\r\n    email: 'Julianne.OConner@kory.org',\r\n  },\r\n  {\r\n    id: 5,\r\n    name: 'Chelsey Dietrich',\r\n    username: 'Kamren',\r\n    email: 'Lucio_Hettinger@annie.ca',\r\n  },\r\n  {\r\n    id: 6,\r\n    name: 'Mrs. Dennis Schulist',\r\n    username: 'Leopoldo_Corkery',\r\n    email: 'Karley_Dach@jasper.info',\r\n  },\r\n  {\r\n    id: 7,\r\n    name: 'Kurtis Weissnat',\r\n    username: 'Elwyn.Skiles',\r\n    email: 'Telly.Hoeger@billy.biz',\r\n  },\r\n  {\r\n    id: 8,\r\n    name: 'Nicholas Runolfsdottir V',\r\n    username: 'Maxime_Nienow',\r\n    email: 'Sherwood@rosamond.me',\r\n  },\r\n  {\r\n    id: 9,\r\n    name: 'Glenna Reichert',\r\n    username: 'Delphine',\r\n    email: 'Chaim_McDermott@dana.io',\r\n  },\r\n  {\r\n    id: 10,\r\n    name: 'Clementina DuBuque',\r\n    username: 'Moriah.Stanton',\r\n    email: 'Rey.Padberg@karina.biz',\r\n  },\r\n];\r\n","export default [\r\n  {\r\n    id: 1,\r\n    title: 'delectus aut autem',\r\n    completed: true,\r\n    userId: 1,\r\n  },\r\n  {\r\n    id: 15,\r\n    title: 'some other todo',\r\n    completed: false,\r\n    userId: 1,\r\n  },\r\n  {\r\n    id: 2,\r\n    title: 'quis ut nam facilis et officia qui',\r\n    completed: false,\r\n    userId: 4,\r\n  },\r\n];\r\n","import { useState } from 'react';\nimport './App.scss';\nimport { TodoList } from './components/TodoList';\nimport { ToDo } from './types/type';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nfunction getUser(id: number) {\n  return usersFromServer.find(usr => (id) === usr.id) || null;\n}\n\nexport const App = () => {\n  const initTodos = todosFromServer.map(todo => ({\n    ...todo,\n    user: getUser(todo.userId),\n  }));\n\n  const [todos, setTodos] = useState<ToDo[]>(initTodos);\n  const [todo, setTodo] = useState<ToDo>(\n    {\n      id: 0,\n      title: '',\n      completed: false,\n      user: null,\n    },\n  );\n\n  const [isFilled, setIsFilled] = useState(true);\n\n  const onAdd = (newTodo: ToDo) => {\n    setTodos(currentTodos => [\n      ...currentTodos,\n      {\n        ...newTodo,\n        id: Math.max(...(todosFromServer.map(toDo => toDo.id))) + 1,\n      },\n    ]);\n  };\n\n  const resetForm = () => {\n    setTodo(\n      {\n        id: 0,\n        title: '',\n        completed: false,\n        user: null,\n      },\n    );\n\n    setIsFilled(true);\n  };\n\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTodo(\n      { ...todo, title: event.target.value },\n    );\n  };\n\n  const handleUserIdChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setTodo(\n      {\n        ...todo,\n        user: getUser(+event.target.value),\n      },\n    );\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    if (!todo.title || !todo.user?.id) {\n      setIsFilled(false);\n\n      return;\n    }\n\n    onAdd(todo);\n    resetForm();\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/todos\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label htmlFor=\"title\">\n            Title:\n            <input\n              type=\"text\"\n              value={todo.title}\n              data-cy=\"titleInput\"\n              name=\"title\"\n              placeholder=\"Enter a title\"\n              onChange={handleTitleChange}\n            />\n            {(!todo.title.trim() && !isFilled)\n              && (<span className=\"error\">Please enter a title</span>)}\n          </label>\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"select\">\n            User:\n            <select\n              name=\"select\"\n              data-cy=\"userSelect\"\n              onChange={handleUserIdChange}\n              value={!todo.user ? 0 : todo.user.id}\n            >\n              <option value=\"0\" disabled>Choose a user</option>\n              {usersFromServer.map(usr => (\n                <option\n                  value={usr.id}\n                  key={usr.id}\n                >\n                  {usr.name}\n                </option>\n              ))}\n            </select>\n\n            {(!todo.user && !isFilled)\n              && (<span className=\"error\">Please choose a user</span>)}\n          </label>\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n        >\n          Add\n        </button>\n      </form>\n      <TodoList\n        todos={todos}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\r\nimport { App } from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}