{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","api/todos.ts","App.tsx","index.tsx"],"names":["UserInfo","user","className","href","email","name","TodoInfo","todo","id","cn","completed","title","TodoList","todos","map","username","userId","getUser","usersFromServer","find","usr","App","initTodos","todosFromServer","useState","setTodos","setTodo","isFilled","setIsFilled","hasTitleError","trim","hasUserError","action","method","onSubmit","event","newTodo","preventDefault","currentTodos","Math","max","htmlFor","type","value","placeholder","onChange","target","Number","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.79b73947.chunk.js","sourcesContent":["import React from 'react';\nimport { User } from '../../types';\n\ntype UsrInfo = {\n  user: User\n};\n\nexport const UserInfo: React.FC<UsrInfo> = ({ user }) => (\n  <a\n    className=\"UserInfo\"\n    href={`mailto:${user.email}`}\n  >\n    {user.name}\n  </a>\n);\n","import React from 'react';\nimport cn from 'classnames';\nimport { UserInfo } from '../UserInfo';\nimport { Todo } from '../../types';\n\ntype Props = {\n  todo: Todo,\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => (\n  <article\n    data-id={todo.id}\n    className={cn('TodoInfo', { 'TodoInfo--completed': todo.completed })}\n  >\n    <h2 className=\"TodoInfo__title\">\n      {todo.title}\n    </h2>\n    {todo.user && (\n      <UserInfo\n        user={todo.user}\n      />\n    )}\n  </article>\n);\n","import React from 'react';\nimport { TodoInfo } from '../TodoInfo';\nimport { Todo } from '../../types';\n\ntype Props = {\n  todos: Todo[],\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map(todo => (\n      <TodoInfo\n        key={todo.id}\n        todo={todo}\n      />\n    ))}\n  </section>\n);\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import { useState } from 'react';\nimport './App.scss';\nimport { TodoList } from './components/TodoList';\nimport { Todo } from './types/types';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nfunction getUser(id: number) {\n  return usersFromServer.find(usr => id === usr.id) || null;\n}\n\nexport const App = () => {\n  const initTodos = todosFromServer.map(todo => ({\n    ...todo,\n    user: getUser(todo.userId),\n  }));\n\n  const [todos, setTodos] = useState<Todo[]>(initTodos);\n  const [todo, setTodo] = useState<Todo>(\n    {\n      id: 0,\n      title: '',\n      completed: false,\n      user: null,\n    },\n  );\n\n  const [isFilled, setIsFilled] = useState(true);\n\n  const addTodo = (newTodo: Todo) => {\n    setTodos(currentTodos => [\n      ...currentTodos,\n      {\n        ...newTodo,\n        // eslint-disable-next-line @typescript-eslint/no-shadow\n        id: Math.max(...(todosFromServer.map(todo => todo.id))) + 1,\n      },\n    ]);\n  };\n\n  const resetForm = () => {\n    setTodo(\n      {\n        id: 0,\n        title: '',\n        completed: false,\n        user: null,\n      },\n    );\n\n    setIsFilled(true);\n  };\n\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTodo(\n      { ...todo, title: event.target.value },\n    );\n  };\n\n  const handleUserIdChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setTodo(\n      {\n        ...todo,\n        user: getUser(Number(event.target.value)),\n      },\n    );\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    if (!todo.title || !todo.user?.id) {\n      setIsFilled(false);\n\n      return;\n    }\n\n    addTodo(todo);\n    resetForm();\n  };\n\n  const hasTitleError = !todo.title.trim() && !isFilled;\n\n  const hasUserError = !todo.user && !isFilled;\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/todos\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label htmlFor=\"title\">\n            Title:\n            <input\n              type=\"text\"\n              value={todo.title}\n              data-cy=\"titleInput\"\n              name=\"title\"\n              placeholder=\"Enter a title\"\n              onChange={handleTitleChange}\n            />\n            {hasTitleError\n            && <span className=\"error\">Please enter a title</span>}\n          </label>\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"select\">\n            User:\n            <select\n              name=\"select\"\n              data-cy=\"userSelect\"\n              onChange={handleUserIdChange}\n              value={!todo.user ? 0 : todo.user.id}\n            >\n              <option value=\"0\" disabled>Choose a user</option>\n              {usersFromServer.map(user => (\n                <option\n                  value={user.id}\n                  key={user.id}\n                >\n                  {user.name}\n                </option>\n              ))}\n            </select>\n\n            {hasUserError\n              && (<span className=\"error\">Please choose a user</span>)}\n          </label>\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n        >\n          Add\n        </button>\n      </form>\n      <TodoList\n        todos={todos}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}